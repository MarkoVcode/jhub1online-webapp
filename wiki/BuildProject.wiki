#summary This manual covers step by step guide to get started with the project environment setup.
#labels Featured
#sidebar SideNav

= Building Project =
<wiki:toc max_depth="3" /> 

= Introduction =

There are three essential tools that are needed to start developing the project.
Platform independent ones:
  # [https://www.dartlang.org/ Dart IDE]
  # [http://www.soapui.org/ SoapUI]
And [http://subversion.apache.org/ Subversion] client which can be different depending on the platform and personal preferences.
Windows users might go for [http://tortoisesvn.net/ TortoiseSVN] when the Linux lovers would rather prefer raw command line interface.

The screen grabs are from early stage of the project. The real views might differ.

*PLEASE NOTE:* _The following setup is using two ports: 8080 for local web server and 8081 for mocking REST services. Make sure the ports are not used by other software or change the configuration accordingly_

= Checking out the project =

==Linux==
To install [http://subversion.apache.org/ Subversion] follow the way most suitable for your linux distro.
For Ubuntu you need to:
{{{
sudo apt-get install subversion
}}}
Create folder that will contain all the project's elements:
{{{
mkdir JHUB1OnlineProject
cd JHUB1OnlineProject
}}}
Check out the source files:
{{{
svn co https://jhub1online-webapp.googlecode.com/svn/trunk/webapp JHUB1OnlineWebApp
}}}
==Windows==

To be updated.

= Configuring REST mocking service =

  * (Step 1) Open SoapUI; File -> Import Remote Project
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev00.png
  * (Step 2) Provide following URL:
{{{
https://jhub1online-webservice.googlecode.com/svn/trunk/webend/mock/REST-Project-1-soapui-project.xml
}}}
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev01.png
  * (Step 3) Now the workspace is loaded, can be browsed
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev03.png
  * (Step 4) Find MockAPIOperations and in the context menu pick Start Minimized
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev04.png
At this point the RESTful web service is waiting for the calls from the DART app.

= Running project in DART IDE =

  * (Step 1) Open Dart IDE and in the Files window context menu pick Open Existng Folder...
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev10.png
  * (Step 2) Show the path to the folder that has been just checked out JHUB1OnlineWebApp
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev11.png
  * (Step 3) You can see the project in the IDE
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev12.png
  * (Step 4) Go to RUN -> Manage Launches...
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev13.png
  * (Step 5) Create a new Browser launch
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev14.png
  * (Step 6) Select HTML file 
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev15.png
  * (Step 7) It should be jhub1onlinerestexample.html and now you can press Run on the window from step 6
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev16.png
  * (Step 8) The browser should open with the following page:
*PLEASE NOTE:* _It might take a few seconds to start operating at the first time_
https://jhub1online-webapp.googlecode.com/svn/wiki/assets/linuxWebAppDev17.png



